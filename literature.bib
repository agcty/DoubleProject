@book{Gothelf2013,
abstract = {User experience (UX) Web design has traditionally been a deliverables-based practice, defined by wireframes, site maps, flow diagrams, content inventories, taxonomies, and mockups. But that tradition is not the best way to serve the user. With this guide, you'll learn that UX is about the experience, not the deliverables.},
author = {Gothelf, Jeff},
address = {Beijing},
booktitle = {Lean UX : applying lean principles to improve user experience},
isbn = {9781449311650},
keywords = {User interfaces (Computer systems) -- Design},
language = {eng},
publisher = {O'Reilly},
series = {The Lean series.},
title = {Lean UX : applying lean principles to improve user experience},
year = {2013}
}

@book{filipova2016learning,
title={Learning Vue. js 2},
author={Filipova, Olga},
year={2016},
publisher={Packt Publishing Ltd}
}

@book{Norman2013,
author = {Norman, Donald A.},
address = {New York},
booktitle = {The design of everyday things},
edition = {Revised and expanded edition.},
isbn = {9780465003945},
keywords = {Industrial design -- Psychological aspects},
language = {eng},
publisher = {Basic Books},
title = {The design of everyday things},
year = {2013}
}

@online{Nielsen1995,
author = {Nielsen, Jakob},
title = {10 Usability Heuristics for User Interface Design},
year = 1995,
url = {https://www.nngroup.com/articles/ten-usability-heuristics/},
urldate = {2019-01-16}
}

@book{Johnson2010,
author = {Johnson, Jeff},
address = {Burlington, Massachusetts},
booktitle = {Designing with the mind in mind : simple guide to understanding user interface design rules},
isbn = {9780080963020},
keywords = {Graphical user interfaces (Computer systems)},
language = {eng},
publisher = {Morgan Kaufmann Publishers},
title = {Designing with the mind in mind : simple guide to understanding user interface design rules},
year = {2010}
}

@online{AppleDesignGuidelines2019,
author = {Apple},
title = {Human Interface Guidelines},
year = 2019,
url = {https://developer.apple.com/design/human-interface-guidelines/ios/overview/themes/},
urldate = {2019-01-16}
}

@online{ wiki:Vue,
author = "{Wikipedia contributors}",
title = "Vue.js --- {Wikipedia}{,} The Free Encyclopedia",
year = "2019",
url = "https://en.wikipedia.org/w/index.php?title=Vue.js&oldid=883864647",
note = "[Online; accessed 18-February-2019]"
}


@online{CompaniesUsingVue:online,
author = {Michał Sajnóg},
title = {13 Top Companies That Have Trusted Vue.js – Examples of Applications | Netguru Blog on Vue},
url = {https://www.netguru.com/blog/13-top-companies-that-have-trusted-vue.js-examples-of-applications; http://gfs.sf.net/gerris.pdf},
month = {03},
year = {2018},
note = {02/18/2019}
}

@online{ComparisonVue:online,
author = {Vue contributors},
title = {Comparison with Other Frameworks — Vue.js},
url = {https://vuejs.org/v2/guide/comparison.html},
month = {},
year = {2018},
urldate = {02/18/2019}
}

@online{VueTypeScript:online,
author = {Vue contributors},
title = {TypeScript Support — Vue.js},
url = {https://vuejs.org/v2/guide/typescript.html},
month = {},
year = {},
urldate = {02/19/2019}
}

@online{ReactJSX:online,
author = {React contributors},
title = {Rendering Elements – React},
url = {https://reactjs.org/docs/rendering-elements.html},
month = {},
year = {},
urldate = {02/19/2019}
}

@online{AddingReact:online,
author = {React contributors},
title = {Add React to a Website – React},
url = {https://reactjs.org/docs/add-react-to-a-website.html},
month = {},
year = {},
urldate = {02/19/2019}
}

@online{TypeScript:online,
author = {},
title = {TypeScript - JavaScript that scales.},
url = {https://www.typescriptlang.org/},
month = {},
year = {},
urldate = {02/19/2019}
}


@inproceedings{DynamicallyTypedLanguages,
Abstract = {Dynamically typed languages have recently turned out to be suitable for developing specific scenarios where dynamic adaptability or rapid prototyping are important issues. However, statically typed programming languages commonly offer more opportunities for compiler optimizations and earlier type error detection. Due to the benefits of both approaches, some programming languages such as C{\#} 4.0, Boo, Visual Basic or Objective-C provide both static and dynamic typing. We describe the StaDyn programming language that supports both type systems in the very same programming language. The main contribution of StaDyn is that it keeps gathering type information at compile time even over dynamically typed references, obtaining a better runtime performance, earlier type error detection, and an intuitive combination of statically and dynamically typed code.},
Address = {Berlin, Heidelberg},
Author = {Ortin, Francisco and Garcia, Miguel},
Booktitle = {Software and Data Technologies},
Editor = {Cordeiro, Jos{\'e} and Virvou, Maria and Shishkov, Boris},
Isbn = {978-3-642-29578-2},
Pages = {72--87},
Publisher = {Springer Berlin Heidelberg},
Title = {A Programming Language That Combines the Benefits of Static and Dynamic Typing},
Year = {2013}
}
